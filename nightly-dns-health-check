#!/bin/bash

# get today's zone files
# run dns-purist, capturing the essential data
# add today's metrics to the CSV file
#
# RUN FROM CRON - nightly
#

# used for creating dirs, filenames
DATE=`date +%Y%m%d`

# where to find all the things
# in addition to being the holder of all data files
# it also holds the skip list
TOPDIR=~tperrine/git-work/dns-purist

# the programs
BINDIR=${TOPDIR}/bin
# the nightly data
DATADIR=${TOPDIR}/DNS-data/${DATE}.dnsdata
# the dir above where the master CSV summary can be found
MASTERDIR=${TOPDIR}/DNS-data

if [ -d "${DATADIR}" ]; then
    echo "data directory ${DATADIR} exists - exit"
    exit 1
fi

LOGFILE=${DATADIR}/dns-health-check.log

mkdir $DATADIR

cd ${DATADIR}

${BINDIR}/big-zone-xfer > ${LOGFILE}
echo transfer complete
grep failed ${LOGFILE}

# now to run The Big Job

echo `date` - dumping IPs, names and records

# pass one - just dump all the IPs and names in all the zones, sort -u - this is very fast

time ${BINDIR}/dns-purist.py --dump_ips *.zone *.revzone | sort -u > dns-ips.$DATE
time ${BINDIR}/dns-purist.py --dump_names *.zone *.revzone | sort -u > dns-names.$DATE
time ${BINDIR}/dns-purist.py --dump_records *.zone *.revzone | sort -u > dns-records.$DATE

echo `date` - begin the big run with --all-w_dns_lookups

# pass two - do all the analysis, including using DNS lookups - this is rather slow
time ${BINDIR}/dns-purist.py --csv_output --allow_dns_lookups *.zone *.revzone ${TOPDIR}/zone-skip-list.extzone > dns-health.$DATE
echo `date` - big run done

echo CSV statistics
tail -2 dns-health.$DATE

# append the CSV to the master CSV
echo "$DATE,"`tail -1 dns-health.$DATE` >> $MASTERDIR/dns-master-auto.csv

echo "differences between live IPs and DNS IPs"
echo word counts
wc -l ${TOPDIR}/live-ips-latest.sorted dns-ips.$DATE

echo differences
diff ${TOPDIR}/live-ips-latest.sorted dns-ips.$DATE | wc -l

echo "live IPs NOT in DNS"
diff ${TOPDIR}/live-ips-latest.sorted dns-ips.$DATE | grep '<' | wc -l

echo "DNS IPs NOT live at last scan"
diff ${TOPDIR}/live-ips-latest.sorted dns-ips.$DATE | grep '>' | wc -l

for file in *.gp; do 
    gnuplot -p -c $file &
done


